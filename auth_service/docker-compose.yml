version: "3.9"

services:
  # === Приложение: rsk_auth_app=
  rsk_auth_app:
    build: .
    depends_on:
      rsk_auth_db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - shared_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rsk_auth_app.rule=Host(`api.rosdk.ru`) && PathPrefix(`/auth`)"
      - "traefik.http.routers.rsk_auth_app.entrypoints=websecure"
      - "traefik.http.routers.rsk_auth_app.tls.certresolver=le"
      - "traefik.http.services.rsk_auth_app.loadbalancer.server.port=8002"
      
  # === PostgreSQL ===
  rsk_auth_db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2305
      POSTGRES_DB: rsk_back
    env_file:
      - .env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared_network

  # === RabbitMQ ===
  rabbitmq:
    image: rabbitmq:3.12-management
    environment:
      RABBITMQ_DEFAULT_USER:admin
      RABBITMQ_DEFAULT_PASS:myStrongPasswordRSKTEAM
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - shared_network

# === Volumes для данных БД ===
volumes:
  postgres_data:

# === Общая сеть для всех контейнеров ===
networks:
  shared_network:
    external: true
