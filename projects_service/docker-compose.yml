services:
  rsk_projects_app:
    build: .
    depends_on:
      rsk_projects_db:
        condition: service_healthy
    restart: on-failure
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - shared_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rsk_orgs_service.rule=Host(`api.rosdk.ru`) && PathPrefix(`/projects`)"
      - "traefik.http.routers.rsk_orgs_service.entrypoints=websecure"
      - "traefik.http.routers.rsk_orgs_service.tls.certresolver=le"
      - "traefik.http.services.rsk_orgs_service.loadbalancer.server.port=8010"

  rsk_projects_db:
    image: postgres:17-alpine
    volumes:
      - profile_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2305
      POSTGRES_DB: rsk_projects
    ports:
      - "5442:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared_network

volumes:
  profile_postgres_data:

networks:
  shared_network:
    external: true
